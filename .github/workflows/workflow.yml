name: Flake Check

on: 
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 */12 * * *'

jobs:
  flake-check:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write

    steps:
    - name: Send Test Telegram Notification
      run: |
        MESSAGE="Checking Repo Rishabh5321/dotfiles please wait for furthur report"
        curl -s -X POST https://api.telegram.org/bot$TELEGRAM_TOKEN/sendMessage \
          -d chat_id=$CHAT_ID \
          -d text="$MESSAGE"
      env:
        TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
        CHAT_ID: ${{ secrets.CHAT_ID }}

    - name: Checkout repository
      id: checkout
      uses: actions/checkout@v4

    - name: Install Nix
      id: install-nix
      uses: cachix/install-nix-action@v26
      with: 
        nix_path: nixpkgs=channel:nixos-unstable

    - name: Install Nix Linting and Formatting Tools
      id: install-tools
      run: nix-env -i statix nixpkgs-fmt -f '<nixpkgs>'

    - name: Run Statix Lint
      id: run-statix
      run: statix fix

    - name: Run Nix Format
      id: run-nix-fmt
      run: nix fmt

    - name: Nix Flake Check - Manual
      id: nix-flake-check-manual
      run: nix flake check | tee flake-check-output.txt

    - name: Nix Flake Checker
      id: nix-flake-checker
      uses: DeterminateSystems/flake-checker-action@v5

    - name: Commit
      id: commit
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: Auto lint/format

    - name: Set Result
      if: failure()
      run: echo "result=failure" >> $GITHUB_ENV

    - name: Set Failed Step
      if: failure()
      run: |
        for step in ${{ steps }}; do
          if [ "${{ step.outcome }}" == "failure" ]; then
            echo "failed_step=${{ step.name }}" >> $GITHUB_ENV
            break
          fi
        done

    - name: Read Flake Check Output
      id: read-flake-output
      run: |
        if [ -f flake-check-output.txt ]; then
          FLAKE_OUTPUT=$(cat flake-check-output.txt)
          echo "flake_output<<EOF" >> $GITHUB_ENV
          echo "$FLAKE_OUTPUT" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        fi

    - name: Send Telegram Notification
      if: always()
      run: |
        if [ "${{ env.result }}" == "failure" ]; then
          MESSAGE="GitHub Action failed at step: ${{ env.failed_step }}\n\nFlake Check Output:\n${{ env.flake_output }}"
        else
          MESSAGE="GitHub Action completed successfully: Flake Check\n\nFlake Check Output:\n${{ env.flake_output }}"
        fi
        curl -s -X POST https://api.telegram.org/bot$TELEGRAM_TOKEN/sendMessage \
          -d chat_id=$CHAT_ID \
          -d text="$MESSAGE"
      env:
        TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
        CHAT_ID: ${{ secrets.CHAT_ID }}